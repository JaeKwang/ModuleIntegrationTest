#pragma once

namespace IO_List {
	enum eDI_Code {
		AUTO_MANUAL_SEL = 0,
		POWER_SW,
		RESET_SW,
		START_SW,
		STOP_SW,
		DOOR_OPEN_SW,
		MOTOR_BRAKE_RELEASE_BTN,
		EMS_TP,
		EMS1,
		EMS2,
		EMS3,
		EMS4,
		SW_DOOR_OPEN,
		LIFT_FRONT_LIMIT_RLS,
		LIFT_FRONT_LIMIT_FLS,
		LIFT_FRONT_LIMIT_DOG,
		RIGHT_REAR_LIMIT_RLS,
		RIGHT_REAR_LIMIT_FLS,
		RIGHT_REAR_LIMIT_DOG,
		BUMPER1,
		BUMPER2,
		BUMPER3,
		BUMPER4,
		CART_CHECK_FRONT,
		CART_CHECK_REAR,
		BATTERY_ALARM,
		ENABLE_SW1,
		ENABLE_SW2,
		FORK_LEFT_LIMIT1,
		FORK_LEFT_LIMIT2,
		FORK_LEFT_PALLET_ON_LOAD,
		FORK_RIGHT_LIMIT1,
		FORK_RIGHT_LIMIT2,
		FORK_RIGHT_PALLET_ON_LOAD,
		PANEL_POWER_LINE,
		PALLET_APPROACH,
		SAFETY_PLC_OUT,
		MIC3_WARNING,
		CP_SATETY_POWER_CHECK,
		HUMAN_DETECTED,
		QR_CAMERA_POWER_ON,
		CV_PHOTO_SENSOR_1,
		CV_PHOTO_SENSOR_2,
		CV_PHOTO_SENSOR_3,
		CV_PHOTO_SENSOR_4,
		PIO_GO,
		PIO_IN0,
		PIO_IN1,
		PIO_IN2,
		PIO_IN3,
		PIO_IN4,
		PIO_IN5,
		PIO_IN6,
		PIO_IN7,
		PIO1_GO,
		PIO1_IN0,
		PIO1_IN1,
		PIO1_IN2,
		PIO1_IN3,
		PIO1_IN4,
		PIO1_IN5,
		PIO1_IN6,
		PIO1_IN7,
		PIO2_GO,
		PIO2_IN0,
		PIO2_IN1,
		PIO2_IN2,
		PIO2_IN3,
		PIO2_IN4,
		PIO2_IN5,
		PIO2_IN6,
		PIO2_IN7,
		//--------------- 
		PIN_SIZE,
	};
	enum eDO_Code {
		MAIN_POWER_ON = 0,
		RESET_SW_LED,
		START_SW_LED,
		STOP_SW_LED,
		CHARGE_RELAY_ON,
		LEFT_LED_R,
		LEFT_LED_G,
		LEFT_LED_B,
		RIGHT_LED_R,
		RIGHT_LED_G,
		RIGHT_LED_B,
		TOWER_LAMP_R,
		TOWER_LAMP_Y,
		TOWER_LAMP_G,
		SPEAKER_CH1,
		SPEAKER_CH2,
		SPEAKER_CH3,
		SPEAKER_CH4,
		SPEAKER_CH5,
		WARNNING_LIGHT_SW,
		INVERTER_KEY_OFF,
		LIFT_SERVO_MOTOR_BRAKE_ON,
		DRIVE_SERVO_MOTOR_BRAKE_ON,
		RELEASE_BUMPER_LOCK,
		BUMPER_DISABLE,
		AUTO_PAD_CLOSE,
		LH_MOTOR_SSR01,
		RH_MOTOR_SSR02,
		PIO_OUT0,
		PIO_OUT1,
		PIO_OUT2,
		PIO_OUT3,
		PIO_OUT4,
		PIO_OUT5,
		PIO_OUT6,
		PIO_OUT7,
		PIO1_OUT0,
		PIO1_OUT1,
		PIO1_OUT2,
		PIO1_OUT3,
		PIO1_OUT4,
		PIO1_OUT5,
		PIO1_OUT6,
		PIO1_OUT7,
		PIO2_OUT0,
		PIO2_OUT1,
		PIO2_OUT2,
		PIO2_OUT3,
		PIO2_OUT4,
		PIO2_OUT5,
		PIO2_OUT6,
		PIO2_OUT7,
		//---------------
		POUT_SIZE,
	};
	enum eAI_Code {
		TILT_ANGLE_SENSOR = 0,
		LOAD_SENSOR,
	};
	enum eAO_Code {
		A_OUT_0 = 0,
		A_OUT_1,
	};
	typedef struct _DIOModule {
		int nPinNum;
		int nDIStart;
		int nDINumber;
		int nDOStart;
		int nDONumber;
	}DIOModule;
	typedef struct _IOPinType {
		std::string strPinName;
		std::string strModel;
		int nDIONumber;
		int nPinBase;
		int nPinPosition;
		bool bActive;
	}IOPinType;
}